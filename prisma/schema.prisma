// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Author
  Moderator
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      UserRole @default(Author)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Project {
  id           Int      @id @default(autoincrement())
  projectTitle String
  desc         String
  image        String
  overview     String
  live         String
  frontend     String
  backend      String
  technologies String[]
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("projects")
}

enum skillLevel {
  Advance
  Intermediate
  Comfortable
  Beginner
  Novice
}

model Skill {
  id        Int        @id @default(autoincrement())
  name      String
  rate      Float
  icon      String
  level     skillLevel
  isDeleted Boolean    @default(false)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("skills")
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  desc       String
  intro      String
  desc1      String
  desc2      String
  desc3      String
  conclusion String
  mainImage  String
  images     String[]
  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("blogs")
}

model experience {
  id          Int      @id @default(autoincrement())
  companyName String
  location    String
  startDate   String
  endDate     String
  duration    String
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("experience")
}
